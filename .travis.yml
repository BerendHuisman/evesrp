addons:
# Use MariaDB instead of MySQL for for better defaults and better reflection of
# what is actually being used.
    mariadb: '10.0'
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
# See below why g++4.8 is required, graphviz is required for building the docs.
        - g++-4.8
        - graphviz

cache:
  pip: true
  directories:
    - node_modules

services:
    - postgresql

# sudo: false means we use the container-based infrastructure. Bit faster, and
# we get caching for free.
sudo: false

notifications:
    email:
        on_success: change
        on_failure: change

language: python

env:
    global:
        - POSTGRES_USER="postgres"
        - MYSQL_USER="root"
        - secure: "C2mxf91tBu7PyGi7DFqJzmEpbtHcOOjCHCCpahSXQoieSCvfZrSagNnpaDXBmtucd8SWDlglXJZqXPDvGoWTPIzNRlKDTljSrgMrBznygSeZF2RVE7lkX7woGqYn4+9LapFQpRgGiERMRvdE3cxaiy8TkMulCL+2dzSNkgdX4NU="
        - secure: "g31ZfiKl+sulMBV5BwozGw/fo0MGwE9fQMnnQmjIi40rIMby9DzmjSCeBj96vNmUEAFBt0cuG66R0vM4hko761I9CDR4ilj6S6+QeL5rMc2GGhytn/cGpKXHGZytq7V0aowWDxyScrFLyvdyOclFlnYScFhacH+kU+NlEzxtQ8Q="

matrix:
    include:
# Browser tests go first, as they take the longest
        - env: TEST_SUITE="browser" SRP_PYTHON="py27"
          python: 2.7
        - env: TEST_SUITE="browser" SRP_PYTHON="py35"
          python: 3.5
# Standard support
        - env: SRP_PYTHON="py27" SRP_DB="sqlite"
          python: 2.7
        - env: SRP_PYTHON="py27" SRP_DB="psycopg2"
          python: 2.7
        - env: SRP_PYTHON="py27" SRP_DB="pymysql"
          python: 2.7
        - env: SRP_PYTHON="py35" SRP_DB="sqlite"
          python: 3.5
        - env: SRP_PYTHON="py35" SRP_DB="psycopg2"
          python: 3.5
        - env: SRP_PYTHON="py35" SRP_DB="pymysql"
          python: 3.5
        - env: SRP_PYTHON="py27" SRP_DB="mysqldb"
          python: 2.7
# Extra support
        - env: SRP_PYTHON="py33" SRP_DB="sqlite"
          python: 3.3
        - env: SRP_PYTHON="py34" SRP_DB="sqlite"
          python: 3.4
        - env: SRP_PYTHON="pypy" SRP_DB="sqlite"
          python: pypy
# Disable PyPy3 until it supports Python 3.3
#       - env: SRP_PYTHON="pypy3" SRP_DB="sqlite"
# Special test suites
        - env: TEST_SUITE="javascript"
        - env: TEST_SUITE="docs"
    allow_failures:
# Pypy is weird and takes a long time to test
        - env: SRP_PYTHON="pypy"    SRP_DB="sqlite"
# See above note on PyPy3
#       - env: SRP_PYTHON="pypy3"   SRP_DB="sqlite"
    fast_finish: true

before_install:
# Update to a recent version of Node, npm and pip
    - nvm install 5.3.0
    - npm install -g npm@latest
    - npm install
    - pip install --upgrade pip
    - make travis-setup

install:
# One of the Node modules (microtime, required by selectize) needs g++ >=4.8
    - export CXX=g++-4.8
    - make build-deps

# Sauce Connect setup must be done in .travis.yml as Make uses a fresh shell
# for each command (line in the file). This means the environment variables
# needed to find the tunnel are discarded. By doing them here, they are saved
# in the single session used in Travis.
before_script:
    # Decrypt the deploy key used to publish test reports and add it to
    # ssh-agent.
    - openssl aes-256-cbc -K $encrypted_20e576b606a4_key -iv $encrypted_20e576b606a4_iv -in deploy_key.enc -out deploy_key -d
    - ssh-add deploy_key
    - source ./scripts/sauce_connect.sh
# Always succeed. If it fails to set up the tunnel, the test suite will fall
# back to testing with PhantomJS. This is expected to happen on pull requests.
    - '[ "x$TEST_SUITE" = "xbrowser" ] && travis_start_sauce_connect || true'

script: TOXENV="$SRP_PYTHON-$SRP_DB" make travis

after_script:
    - '[ "x$TEST_SUITE" = "xbrowser" ] && travis_stop_sauce_connect'

after_success:
    - make travis-success
    - make upload-reports

after_failure:
    - make upload-reports

before_cache:
# Remove our files from the caches
    - rm -f node_modules/evesrp
    - find ~/.cache/pip -name 'EVE_SRP*' -delete
