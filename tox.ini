[tox]
# Because not every target is listed in the default envlist, here's the actual
# list of possible environments:
# [python]-[database_driver]-[webdriver]
# [python] can be one of the factors defined by tox for basepython
# [database] can be one of:
#   * "sqlite" for the built-in SQLite driver
#   * "psygopg2" for the Psycopg2 driver for PostgreSQL
#   * "pymysql" for the PyMySQL MySQL driver
#   * "mysqldb" for the native (Python 2 only) MySQL driver.
# [webdriver] can be one of:
#   * "chrome" to test functionality in Chrome. Requires chromedriver to be
#      available.
#   * "phantomjs" to test functionality in PhantomJS. Will use either a
#      system-provided binary or one from NPM.
#   * this factor is optional, and if omitted, means browser-based testing will
#     be skipped.
#
# In addition to these targets there is a "docs" target that will build the
# documentation for the project.
envlist = 
    {py27,py35}-{sqlite,psycopg2,pymysql},
    {py27,py35}-sqlite-{chrome,phantomjs,firefox},
    py33-sqlite,
    py34-sqlite,
    py27-mysqldb,
    pypy-sqlite,
# PyPy3 is not supported while it only has Python 3.2 support
#    pypy3-sqlite

skip_missing_interpreters = true


[db-config]
postgres_user = {env:POSTGRES_USER:postgres}
mysql_user = {env:MYSQL_USER:mysql}


[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
# Required by BraveCore extra
    braveapi == 0.1
    ecdsa == 0.11
# Required by OAuth extra
    requests-oauthlib >= 0.6.0
# If you skip the `--no-binary EVE-SRP` flag, installing extras will break.
install_command = pip install --no-binary EVE-SRP {opts} {packages}
commands =
    pip install --no-binary EVE-SRP EVE-SRP[BraveCore,OAuth]
    sphinx-build -W -b html -d {envtmpdir}/doctrees doc {envtmpdir}/html

[testenv]
whitelist_externals =
    psycopg2: psql
    pymysql,mysqldb: mysql

commands =
# PostgreSQL setup
    psycopg2: psql -c 'DROP DATABASE IF EXISTS "evesrp_test_{envname}";' -U {[db-config]postgres_user}
    psycopg2: psql -c 'CREATE DATABASE "evesrp_test_{envname}";' -U {[db-config]postgres_user}
# MySQL/MariaDB setup
    pymysql,mysqldb: mysql -u {[db-config]mysql_user} -e 'DROP DATABASE IF EXISTS `evesrp_test_{envname}`;'
    pymysql,mysqldb: mysql -u {[db-config]mysql_user} -e 'CREATE DATABASE `evesrp_test_{envname}`;'
# SQLite doesn't need any setup
# Run tests with coverage instrumentation
    py.test \
        --cov=evesrp --cov-report= --cov-config {toxinidir}/.coveragerc \
        --html=test-reports/{envname}.html \
    {chrome,phantomjs,firefox}: -F \
        {posargs}

deps =
    beautifulsoup4 ~= 4.4.1
    httmock ~= 1.2.2
    coverage ~= 4.0.3
    pytest
    pytest-cov
    pytest-html
# Install selenium for everything just to ensure imports will work properly
    selenium ~= 2.53.6
# Include mock for Python 2 interpreters (And pypy3, which is currently
# at Python 3.2).
    py27,pypy,pypy3: mock >= 1.0.1
# Various DB handlers
    psycopg2: psycopg2
    pymysql: pymysql
    mysqldb: mysql-python

setenv =
# Database connection parameters
    sqlite: DB=sqlite://
    psycopg2: DB=postgresql+psycopg2://{[db-config]postgres_user}@127.0.0.1/evesrp_test_{envname}
    pymysql: DB=mysql+pymysql://{[db-config]mysql_user}@127.0.0.1/evesrp_test_{envname}
    mysqldb: DB=mysql+mysqldb://{[db-config]mysql_user}@127.0.0.1/evesrp_test_{envname}
# What to name the coverage data file
    COVERAGE_FILE={toxinidir}/.coverage.{envname}
# WebDriver selection
    chrome: SELENIUM_DRIVER=Chrome
    phantomjs: SELENIUM_DRIVER=PhantomJS
    firefox: SELENIUM_DRIVER=Firefox

passenv =
    DISPLAY
    TRAVIS_JOB_NUMBER
    TRAVIS_BUILD_NUMBER
    SAUCE_USERNAME
    SAUCE_ACCESS_KEY
